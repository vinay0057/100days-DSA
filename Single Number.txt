Problem - Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.

You must implement a solution with a linear runtime complexity and use only constant extra space.

 
Example 1:
Input: nums = [2,2,1]
Output: 1

Example 2:
Input: nums = [4,1,2,1,2]
Output: 4

Solution - 

class Solution {
    public int singleNumber(int[] arr) {
        Arrays.sort(arr);

        int n = arr.length;
        int i = 0;
        if(n == 1){
            return arr[0];
        }else if(arr[n-1] != arr[n-2]){
            return arr[n-1];
        }
    
        while(i < n){
            if(arr[i] == arr[i+1]){
                i = i+2;
            }else if(arr[i] != arr[i+1]){
                return arr[i];
            }
        }

        return 0;
    }
}